{"version":3,"sources":["app.js","book-add/book-add-controller.js","book-list/book-card-component.js","book-list/book-list-component.js","config/config.js","header/main-bar-directive.js","header/main-header-directive.js","main/main-controller.js","models/book-service.js"],"names":[],"mappings":"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","file":"main.min.js","sourcesContent":["(function() {\r\n    'use strict';\r\n\r\n\tangular.module('app', ['ui.router']);\r\n\r\n\t/*@ngInject*/\r\n\tangular.module('app').config(function($stateProvider, $urlRouterProvider, $locationProvider) {\r\n\r\n\t\tvar main = {\r\n\t\t\tname: 'main',\r\n\t\t\turl: '/',\r\n\t\t\ttemplateUrl: 'app/main/main-template.html',\r\n\t\t\tcontroller: 'mainController',\r\n\t\t\tcontrollerAs: 'main'\r\n\t\t};\r\n\r\n\t\tvar addBook = {\r\n\t\t\tname: 'addBook',\r\n            url: '/addBook',\r\n\t\t\ttemplateUrl: 'app/book-add/book-add-template.html',\r\n\t\t\tcontroller: 'bookAddController',\r\n\t\t\tcontrollerAs: 'addBook'\r\n\t\t};\r\n\r\n        // use the HTML5 History API\r\n        $locationProvider.html5Mode(true);\r\n\r\n\t\t$stateProvider.state(main); \r\n\t\t$stateProvider.state(addBook);\r\n\r\n\t\t$urlRouterProvider.otherwise('/');\r\n\r\n\t});\r\n\r\n})();","/**\r\n * @ngdoc function\r\n * @name app.controller : bookAddControlle\r\n * @description\r\n * # controller\r\n */\r\n\r\n(function() { \r\n  'use strict';\r\n\r\n  /*@ngInject*/\r\n  function BookAddController(bookService, $log, $q) {\r\n    var vm    = this;\r\n\r\n    var init = {\r\n\r\n      initAll: function() {\r\n        $log.info('bookAddController :: init.initAll')\r\n      }\r\n\r\n    };\r\n\r\n    init.initAll();\r\n\r\n  }\r\n\r\n  angular.module('app').controller('bookAddController', BookAddController);\r\n\r\n})();","/* bookCard */\r\n\r\nvar bookCardSettings = {\r\n    bindings: {\r\n        title: '<',\r\n        author: '<',\r\n        category: '<'\r\n    },\r\n    templateUrl: 'app/book-list/book-card-template.html',\r\n    controller: function() {\r\n        var self = this;\r\n\r\n        this.title      = this.title || '-';\r\n        this.author     = this.author || '-';\r\n        this.category   = this.category || '-';\r\n    }\r\n};\r\n\r\nangular.module('app').component('bookCard', bookCardSettings);","/* bookList*/\r\n\r\nvar bookCardSettings = {\r\n    bindings: {},\r\n    templateUrl: 'app/book-list/book-list-template.html',\r\n    controller: function($log, $q, bookService) {\r\n        var self = this;\r\n\r\n        self.books = [];\r\n\r\n        this.init = {\r\n            initAll: function() {\r\n                self.restData.getBooks().then(function(data) {\r\n                    self.books = data.data;\r\n                });\r\n            }\r\n        };\r\n\r\n        this.restData = {\r\n\r\n            getBooks: function() {\r\n                var defered = $q.defer();  \r\n                var promise = defered.promise;\r\n\r\n                bookService.getBooks().then(function(data) {\r\n                    defered.resolve(data);\r\n                }, function(err) {\r\n                    $log.error('error getBooks', err);\r\n                    defered.reject(err);\r\n                });\r\n\r\n                return promise;\r\n            }\r\n        };\r\n\r\n        this.$onInit = function() {\r\n            this.init.initAll();\r\n        };\r\n\r\n    }\r\n};\r\n\r\nangular.module('app').component('bookList', bookCardSettings);","(function() {\r\n  'use strict';\r\n\r\n\tangular.module('app').factory('config', Config);\r\n\r\n  /* @ngInject */\r\n  function Config() { \r\n\r\n    var module  = {};\r\n    var self    = module;\r\n\r\n    var urlBase = '';\r\n    var suffix  = '';\r\n\r\n    module.config  = {\r\n      'environment': 'test',\r\n      'lang': 'en_En' \r\n    };\r\n\r\n     module.restOptions = {\r\n      'type': 'application/json',\r\n      'headers': [{\r\n        'key': 'GS-AUTH-TOKEN',\r\n        'value': 'pending'\r\n      }],\r\n      'showPreload': true,\r\n      'errorInterceptor': true\r\n    };\r\n\r\n    module.templatePaths = {\r\n        base: ''\r\n    };\r\n\r\n    if ( self.config.environment === 'test' ) {\r\n        self.templatePaths.base = './src/';\r\n    } \r\n\r\n    if ( self.config.environment === 'develop' || self.config.environment === 'test' ) {\r\n      urlBase = './mocks/';\r\n      suffix  = '.json';\r\n    }\r\n\r\n    module.urls = {};\r\n\r\n    module.urls.books = urlBase + 'books' + suffix;\r\n\r\n    module.getConfig = function() {\r\n      return self.config;\r\n    };\r\n\r\n    module.getRest = function() {\r\n      return self.urls;\r\n    };\r\n\r\n    return {\r\n      getConfig: module.getConfig,\r\n      getRest: module.getRest\r\n    }\r\n  }\r\n\r\n})();","","/* header.directive.js */\r\n\r\n /* @ngInject */\r\nangular.module('app').directive('mainHeader', function($state) {\r\n    return {\r\n        restrict: 'E',\r\n        replace: false,\r\n        scope: {\r\n            title: '@'\r\n        },\r\n        templateUrl: 'app/header/main-header-template.html',\r\n        link:  function(scope, element, attrs) {\r\n            scope.title = scope.title || '';\r\n            scope.goMain = function() {\r\n              $state.go('main');\r\n            }\r\n        }\r\n    }\r\n});","/**\r\n * @ngdoc function\r\n * @name app.controller : mainController\r\n * @description\r\n * # controller main view\r\n */\r\n\r\n(function() { \r\n  'use strict';\r\n\r\n  /*@ngInject*/\r\n  function MainController($log, $q, $state, config, bookService) {\r\n    var vm    = this;\r\n\r\n    vm.books = [];\r\n\r\n    vm.actions = {\r\n        addBook: function() {\r\n            $state.go('addBook');\r\n        }\r\n    };\r\n\r\n    vm.init = {       \r\n\r\n        initAll: function() {\r\n            $log.info('mainController :: init');\r\n            this.setInitialData();\r\n        },\r\n\r\n        setInitialData: function() {\r\n            vm.title = 'programming books';            \r\n        }\r\n\r\n    };\r\n\r\n\r\n    vm.init.initAll();    \r\n\r\n  }\r\n\r\n  angular.module('app').controller('mainController', MainController);\r\n\r\n})();","(function() {\r\n  'use strict';\r\n\r\n\tangular.module('app').factory('bookService', BookService);\r\n\r\n  /* @ngInject */ \r\n  function BookService($http, $q, config) {\r\n    var urlBooks = config.getRest().books;\r\n    var books = {};\r\n    \r\n    books.allBooks = 'pending';\r\n\r\n    books.getBooks = function() {\r\n        var defered = $q.defer();  \r\n        var promise = defered.promise; \r\n\r\n        if ( books.allBooks === 'pending' ) {\r\n            $http({\r\n                method: 'GET',\r\n                url: urlBooks\r\n                }).then(function successCallback(response) {\r\n                    books.allBooks = response.data;\r\n                    defered.resolve(response.data);                    \r\n                }, function errorCallback(response) {\r\n                    // todo interceptor\r\n                    // defered.reject(err)\r\n                });\r\n        } else {\r\n            defered.resolve(books.allBooks);\r\n        }\r\n        return promise;\r\n    };\r\n\r\n    return books;\r\n  }\r\n\r\n})();"],"sourceRoot":"/source/"}